<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>OsamesMicroOrm</name>
  </assembly>
  <members>
    <member name="T:OsamesMicroOrm.DatabaseMappingAttribute">
      <summary>
            When set on a class, this custom attribute indicates corresponding database table name to store object corresponding to class instance.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.DatabaseMappingAttribute.#ctor(System.String)">
      <summary>
            Constructor.
            </summary>
      <param name="dbTableName_">Database table name</param>
    </member>
    <member name="P:OsamesMicroOrm.DatabaseMappingAttribute.DbTableName">
      <summary>
            Database table name
            </summary>
    </member>
    <member name="T:OsamesMicroOrm.DbManager">
      <summary>
            Generic ADO.NET level, multi thread class, that deals with database providers and database query execution.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.#ctor">
      <summary>
            Constructor called by singleton initialization. Tries to instantiate provider from its name.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.#cctor">
      <summary>
        <markup>
          <include item="SMCAutoDocStaticConstructor">
            <parameter>OsamesMicroOrm.DbManager</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:OsamesMicroOrm.DbManager._connectionString">
      <summary>
            Connection string that is set/checked by corresponding column.
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.DbManager._dbProviderFactory">
      <summary>
            Current DB provider factory.
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.DbManager._oSingletonInit">
      <summary>
            Lock object for singleton initialization.
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.DbManager._providerDefinition">
      <summary>
            Invariant provider name that is set/checked by corresponding column.
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.DbManager._selectLastInsertIdCommandText">
      <summary>
            Provider specific SQL code for "select last insert id" that is set/checked by corresponding column.
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.DbManager._singleton">
      <summary>
            Singleton.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.CommitTransaction(System.Data.Common.DbTransaction)">
      <summary>
            Commits and closes a transaction.
            </summary>
      <param name="transaction_">Transaction to manage</param>
    </member>
    <member name="P:OsamesMicroOrm.DbManager.ConnectionString">
      <summary>
            Standard SQL provider specific connection string.
            Getter thrws an exception if setter hasn't been called with a value.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.CreateConnection">
      <summary>
            If a connection doesn't exist, try to create it.
            If it exists but is closed, reopen it.
            May throw exceptions.	
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:OsamesMicroOrm.DbManager.CreateConnection</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.CreateDbParameters(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{OsamesMicroOrm.DbManager.Parameter})">
      <summary>
            Adds ADO.NET parameters to parameter DbCommand.
            Parameters can be input or output parameters.
            </summary>
      <param name="command_">DbCommand to add parameters to</param>
      <param name="adoParams_">ADO.NET parameters (name and value) as enumerable Parameter objects format</param>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.CreateDbParameters(System.Data.Common.DbCommand,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>
            Adds ADO.NET parameters to parameter DbCommand.
            Parameters are all input parameters.
            </summary>
      <param name="command_">DbCommand to add parameters to</param>
      <param name="adoParams_">ADO.NET parameters (name and value) as enumerable Parameter objects format</param>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.CreateDbParameters(System.Data.Common.DbCommand,System.Object[0:,0:])">
      <summary>
            Adds ADO.NET parameters to parameter DbCommand.
            Parameters are all input parameters.
            </summary>
      <param name="command_">DbCommand to add parameters to</param>
      <param name="adoParams_">ADO.NET parameters (name and value) in multiple array format</param>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.DataAdapter(System.String,OsamesMicroOrm.DbManager.Parameter[],System.Data.CommandType)">
      <summary>
            Executes a SQL select operation
            </summary>
      <param name="cmdType_">SQL command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) in array of Parameter objects format</param>
      <returns>ADO .NET dataset</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.DataAdapter(System.String,System.Data.CommandType)">
      <summary>
            Executes a SQL select operation
            </summary>
      <param name="cmdType_">SQL command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <returns>ADO .NET dataset</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.DataAdapter(System.String,System.Object[0:,0:],System.Data.CommandType)">
      <summary>
            Executes a SQL select operation
            </summary>
      <param name="cmdType_">SQL command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) in multiple object array format</param>
      <returns>ADO .NET dataset</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.DisposeConnection(System.Data.Common.DbConnection@)">
      <summary>
            Fermeture d'une connexion et dispose/mise à null de l'objet.
            </summary>
      <param name="connexion_">connexion</param>
      <returns>Ne renvoie rien</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.ExecuteNonQuery(System.String,OsamesMicroOrm.DbManager.Parameter[],System.Int64@,System.Data.CommandType,System.Data.Common.DbTransaction)">
      <summary>
            Executes an SQL statement which returns number of  affected rows("non query command").
            </summary>
      <param name="lastInsertedRowId_">Last inserted row ID (long number)</param>
      <param name="cmdType_">Command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) in array of Parameter objects format</param>
      <param name="transaction_">When not null, transaction to use</param>
      <returns>Number of affected rows</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.ExecuteNonQuery(System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Int64@,System.Data.CommandType,System.Data.Common.DbTransaction)">
      <summary>
            Executes an SQL statement which returns number of  affected rows("non query command").
            </summary>
      <param name="lastInsertedRowId_">Last inserted row ID (long number)</param>
      <param name="cmdType_">Command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) in list of key/value pair format</param>
      <param name="transaction_">When not null, transaction to use</param>
      <returns>Number of affected rows</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.ExecuteNonQuery(System.String,System.Int64@,System.Data.CommandType,System.Data.Common.DbTransaction)">
      <summary>
            Executes an SQL statement which returns number of affected rows("non query command").
            </summary>
      <param name="lastInsertedRowId_">Last inserted row ID (long number)</param>
      <param name="cmdType_">Command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="transaction_">When not null, transaction to use</param>
      <returns>Number of affected rows</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.ExecuteNonQuery(System.String,System.Object[0:,0:],System.Int64@,System.Data.CommandType,System.Data.Common.DbTransaction)">
      <summary>
            Executes an SQL statement which returns number of  affected rows("non query command").
            </summary>
      <param name="lastInsertedRowId_">Last inserted row ID (long number)</param>
      <param name="cmdType_">Command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) in multiple array format</param>
      <param name="transaction_">When not null, transaction to use</param>
      <returns>Number of affected rows</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.ExecuteReader(System.String,OsamesMicroOrm.DbManager.Parameter[],System.Data.CommandType)">
      <summary>
            Executes a SQL select operation
            </summary>
      <param name="cmdType_">SQL command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) in array of Parameter objects format</param>
      <returns>ADO .NET data reader</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.ExecuteReader(System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Data.CommandType)">
      <summary>
            Executes a SQL select operation
            </summary>
      <param name="cmdType_">SQL command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) formatted as a list of key/value</param>
      <returns>ADO .NET data reader</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.ExecuteReader(System.String,System.Data.CommandType)">
      <summary>
            Executes a SQL select operation
            </summary>
      <param name="cmdType_">SQL command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <returns>ADO .NET data reader</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.ExecuteReader(System.String,System.Object[0:,0:],System.Data.CommandType)">
      <summary>
            Executes a SQL select operation
            </summary>
      <param name="cmdType_">SQL command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) in multiple array format</param>
      <returns>ADO .NET data reader</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.ExecuteScalar(System.Boolean,System.String,OsamesMicroOrm.DbManager.Parameter[],System.Data.CommandType)">
      <summary>
            Executes a SQL operation and returns value of first column and first line of data table result.
            Generally used for a query such as "count()".
            </summary>
      <param name="cmdType_">SQL command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) in array of Parameter objects format</param>
      <param name="blTransaction_">When true, query will be executed using current transaction. OpenTransaction() should have been called first</param>
      <returns>data value</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.ExecuteScalar(System.Boolean,System.String,System.Object[0:,0:],System.Data.CommandType)">
      <summary>
            Executes a SQL operation and returns value of first column and first line of data table result.
            Generally used for a query such as "count()".
            </summary>
      <param name="cmdType_">SQL command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) in multiple object array format</param>
      <param name="blTransaction_">When true, query will be executed using current transaction. OpenTransaction() should have been called first</param>
      <returns>data value</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.ExecuteScalar(System.String,OsamesMicroOrm.DbManager.Parameter[],System.Data.CommandType)">
      <summary>
            Executes a SQL operation and returns value of first column and first line of data table result.
            Generally used for a query such as "count()".
            </summary>
      <param name="cmdType_">SQL command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) in array of Parameter objects format</param>
      <returns>data value</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.ExecuteScalar(System.String,System.Data.CommandType)">
      <summary>
            Executes a SQL operation and returns value of first column and first line of data table result.
            Generally used for a query such as "count()".
            </summary>
      <param name="cmdType_">SQL command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <returns>data value</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.ExecuteScalar(System.String,System.Object[0:,0:],System.Data.CommandType)">
      <summary>
            Executes a SQL operation and returns value of first column and first line of data table result.
            Generally used for a query such as "count()".
            </summary>
      <param name="cmdType_">SQL command type (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) in multiple object array format</param>
      <returns>data value</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.Finalize">
      <summary>
            Destructor. Sets internal static variables that could be linked to unmanaged resources to null.
            </summary>
    </member>
    <member name="P:OsamesMicroOrm.DbManager.Instance">
      <summary>
            Singleton acess, with singleton thread-safe initialization using dedicated lock object.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.OpenTransaction(System.Data.Common.DbConnection)">
      <summary>
            Opens a transaction and returns it.
            </summary>
      <param name="connection_">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>connection_</parameter>
            <parameter>M:OsamesMicroOrm.DbManager.OpenTransaction(System.Data.Common.DbConnection)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:OsamesMicroOrm.DbManager.OpenTransaction(System.Data.Common.DbConnection)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.PrepareCommand(System.Data.Common.DbConnection,System.Data.Common.DbTransaction,System.String,System.Collections.Generic.IEnumerable{OsamesMicroOrm.DbManager.Parameter},System.Data.CommandType)">
      <summary>
            Initializes a DbCommand object with parameters and returns it ready for execution.
            </summary>
      <param name="connection_">Current connection</param>
      <param name="transaction_">When not null, transaction to assign to _command. OpenTransaction() should have been called first</param>
      <param name="cmdType_">Type of command (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) as enumerable Parameter objects format</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:OsamesMicroOrm.DbManager.PrepareCommand(System.Data.Common.DbConnection,System.Data.Common.DbTransaction,System.String,System.Collections.Generic.IEnumerable{OsamesMicroOrm.DbManager.Parameter},System.Data.CommandType)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.PrepareCommand(System.Data.Common.DbConnection,System.Data.Common.DbTransaction,System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Data.CommandType)">
      <summary>
            Initializes a DbCommand object with parameters and returns it ready for execution.
            </summary>
      <param name="connection_">Current connection</param>
      <param name="transaction_">When not null, transaction to assign to _command. OpenTransaction() should have been called first</param>
      <param name="cmdType_">Type of command (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) in list of key/value pair format</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:OsamesMicroOrm.DbManager.PrepareCommand(System.Data.Common.DbConnection,System.Data.Common.DbTransaction,System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Data.CommandType)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.PrepareCommand(System.Data.Common.DbConnection,System.Data.Common.DbTransaction,System.String,System.Data.CommandType)">
      <summary>
            Initializes a DbCommand object with parameters and returns it ready for execution.
            </summary>
      <param name="connection_">Current connection</param>
      <param name="transaction_">When not null, transaction to assign to _command. OpenTransaction() should have been called first</param>
      <param name="cmdType_">Type of command (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:OsamesMicroOrm.DbManager.PrepareCommand(System.Data.Common.DbConnection,System.Data.Common.DbTransaction,System.String,System.Data.CommandType)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.PrepareCommand(System.Data.Common.DbConnection,System.Data.Common.DbTransaction,System.String,System.Object[0:,0:],System.Data.CommandType)">
      <summary>
            Initializes a DbCommand object with parameters and returns it ready for execution.
            </summary>
      <param name="connection_">Current connection</param>
      <param name="transaction_">When not null, transaction to assign to _command. OpenTransaction() should have been called first</param>
      <param name="cmdType_">Type of command (Text, StoredProcedure, TableDirect)</param>
      <param name="cmdText_">SQL command text</param>
      <param name="cmdParms_">ADO.NET parameters (name and value) in multiple array format</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:OsamesMicroOrm.DbManager.PrepareCommand(System.Data.Common.DbConnection,System.Data.Common.DbTransaction,System.String,System.Object[0:,0:],System.Data.CommandType)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:OsamesMicroOrm.DbManager.ProviderName">
      <summary>
            Database provider definition. ADO.NET provider invariant name.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.RollbackTransaction(System.Data.Common.DbTransaction)">
      <summary>
            Rollbacks and closes a transaction.
            </summary>
      <param name="transaction_">Transaction to manage</param>
    </member>
    <member name="P:OsamesMicroOrm.DbManager.SelectLastInsertIdCommandText">
      <summary>
            Provider specific SQL query select instruction (= command text), to execute "Select Last Insert Id".
            It's necessary to define it because there is no ADO.NET generic way of retrieving last insert ID after a SQL update execution.
            </summary>
    </member>
    <member name="T:OsamesMicroOrm.DbManager.Parameter">
      <summary>
            Representation of an ADO.NET parameter. Used same way as an ADO.NET parameter but without depending on System.Data namespace in user code.
            It means more code overhead but is fine to deal with list of complex objects rather than list of values.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.Parameter.#ctor(System.String,System.Object)">
      <summary>
            Constructor with default "in" direction.
            </summary>
      <param name="name_">Name</param>
      <param name="value_">Value</param>
    </member>
    <member name="M:OsamesMicroOrm.DbManager.Parameter.#ctor(System.String,System.Object,System.Data.ParameterDirection)">
      <summary>
            Constructor.
            </summary>
      <param name="name_">Name</param>
      <param name="value_">Value</param>
      <param name="direction_">ADO.NET parameter direction</param>
    </member>
    <member name="F:OsamesMicroOrm.DbManager.Parameter.ParamDirection">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:OsamesMicroOrm.DbManager.Parameter.ParamDirection</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:OsamesMicroOrm.DbManager.Parameter.ParamName">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:OsamesMicroOrm.DbManager.Parameter.ParamName</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:OsamesMicroOrm.DbManager.Parameter.ParamValue">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:OsamesMicroOrm.DbManager.Parameter.ParamValue</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:OsamesMicroOrm.Configuration.ConfigurationLoader">
      <summary>
            This class is dedicated to reading configuration files: app.config and specific files in Config subdirectory.
            Then data is loaded into internal directories.
            There are also overloads to allow configuration bypass, for example in unit tests where it's easier to call an overload to use another XML template file. 
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.ConfigurationLoader.#ctor">
      <summary>
            Private constructor for singleton.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.ConfigurationLoader.#cctor">
      <summary>
        <markup>
          <include item="SMCAutoDocStaticConstructor">
            <parameter>OsamesMicroOrm.Configuration.ConfigurationLoader</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.ConfigurationLoader._detailedLoggerTraceSource">
      <summary>
            Specific logging trace source that traces error messages and stacktraces.
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.ConfigurationLoader._loggerTraceSource">
      <summary>
            Generic logging trace source that traces error messages only.
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.ConfigurationLoader._oSingletonInit">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:OsamesMicroOrm.Configuration.ConfigurationLoader._oSingletonInit</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.ConfigurationLoader._singleton">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:OsamesMicroOrm.Configuration.ConfigurationLoader._singleton</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.ConfigurationLoader.Clear">
      <summary>
            Clears internal singleton, forcing reload to next call to "Instance".
            Useful for unit tests.
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.ConfigurationLoader.DicDeleteSql">
      <summary>
            Templates dictionary for delete
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.ConfigurationLoader.DicInsertSql">
      <summary>
            Templates dictionary for select
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.ConfigurationLoader.DicSelectSql">
      <summary>
            Templates dictionary for select
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.ConfigurationLoader.DicUpdateSql">
      <summary>
            Templates dictionary for update
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.ConfigurationLoader.EndFieldEncloser">
      <summary>
            Caractère d'échappement en fin de nom de colonne dans le texte d'une requête SQL.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.ConfigurationLoader.FillMappingDictionary(System.Xml.XPath.XPathNavigator,System.String,System.String)">
      <summary>
            Loads XML file which contains mapping definitions to internal dictionary.
            <para>Transform all xml tag name in .ToLowerInvariant()</para></summary>
      <param name="xmlNavigator_">Reused XPathNavigator instance</param>
      <param name="xmlRootTagPrefix_">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xmlRootTagPrefix_</parameter>
            <parameter>M:OsamesMicroOrm.Configuration.ConfigurationLoader.FillMappingDictionary(System.Xml.XPath.XPathNavigator,System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="xmlRootTagNamespace_">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xmlRootTagNamespace_</parameter>
            <parameter>M:OsamesMicroOrm.Configuration.ConfigurationLoader.FillMappingDictionary(System.Xml.XPath.XPathNavigator,System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.ConfigurationLoader.FillSqlTemplateDictionary(System.Xml.XPath.XPathNodeIterator,System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>
            Extracts information from XML data which contains templates definitions to internal dictionary.
            </summary>
      <param name="node_">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>node_</parameter>
            <parameter>M:OsamesMicroOrm.Configuration.ConfigurationLoader.FillSqlTemplateDictionary(System.Xml.XPath.XPathNodeIterator,System.Collections.Generic.Dictionary{System.String,System.String})</parameter>
          </include>
        </markup>
      </param>
      <param name="workDictionary_">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>workDictionary_</parameter>
            <parameter>M:OsamesMicroOrm.Configuration.ConfigurationLoader.FillSqlTemplateDictionary(System.Xml.XPath.XPathNodeIterator,System.Collections.Generic.Dictionary{System.String,System.String})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.ConfigurationLoader.FillTemplatesDictionaries(System.Xml.XPath.XPathNavigator,System.String,System.String)">
      <summary>
            Loads XML file which contains templates definitions to internal dictionary.
            </summary>
      <param name="xpathNavigator_">Reused XPathNavigator instance</param>
      <param name="xmlRootTagPrefix_">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xmlRootTagPrefix_</parameter>
            <parameter>M:OsamesMicroOrm.Configuration.ConfigurationLoader.FillTemplatesDictionaries(System.Xml.XPath.XPathNavigator,System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="xmlRootTagNamespace_">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xmlRootTagNamespace_</parameter>
            <parameter>M:OsamesMicroOrm.Configuration.ConfigurationLoader.FillTemplatesDictionaries(System.Xml.XPath.XPathNavigator,System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.ConfigurationLoader.GetDbColumnNameFromMappingDictionary(System.String,System.String)">
      <summary>
            Asks mapping dictionary for a DB column name, given a Db entity property name.
            </summary>
      <param name="mappingDictionaryName_">Nom du dictionnaire de mapping à utiliser</param>
      <param name="propertyName_">DB entity C# object property name. Ex: "CustomerId"</param>
      <returns>DB column name. Ex: "id_customer"</returns>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.ConfigurationLoader.GetDbEntityPropertyNameFromMappingDictionary(System.String,System.String)">
      <summary>
            Asks mapping dictionary for a Db entity object property name, given a DB column name.
            </summary>
      <param name="mappingDictionaryName_">Nom du dictionnaire de mapping à utiliser</param>
      <param name="dbColumnName_">DB column name. Ex: "id_customer"</param>
      <returns>DB entity C# object property name. Ex: "CustomerId"</returns>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.ConfigurationLoader.GetMappingDefinitionsForTable(System.String)">
      <summary>
            Asks mapping dictionary for all mapping defined for a given table.
            </summary>
      <param name="mappingDictionaryName_">Nom du dictionnaire de mapping à utiliser</param>
      <returns>Mapping dictionary</returns>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.ConfigurationLoader.InitializeDatabaseConnection">
      <summary>
            Initialize active connection string values from configuration and setup DbHelper.
            </summary>
      <returns>false when configuration is wrong</returns>
    </member>
    <member name="P:OsamesMicroOrm.Configuration.ConfigurationLoader.Instance">
      <summary>
            Singleton access. Creates an empty object once.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.ConfigurationLoader.LoadConfiguration">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:OsamesMicroOrm.Configuration.ConfigurationLoader.LoadConfiguration</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.ConfigurationLoader.LoadProviderSpecificInformation(System.Xml.XPath.XPathNavigator,System.String,System.String,System.String)">
      <summary>
            Recherche du noeud Provider désiré (déterminé à partir du nom de la connexion active) puis :
            - lecture de ses attributs pour les fields enclosers -&gt; mise à jour de variables de classe StartFieldEncloser et EndFieldEncloser.
            - lecture de ses enfants 
            (Select, pour le moment celui qui définit le texte SQL pour "last insert ID" -&gt; assigne une valeur à DbManager.SelectLastInsertIdCommandText).
            </summary>
      <param name="xPathNavigator_">Navigateur XPath du fichier des templates</param>
      <param name="xmlRootTagPrefix_">Préfixe de tag</param>
      <param name="xmlRootTagNamespace_">Namespace racine</param>
      <param name="activeDbConnectionName_">Nom de la connexion DB active (AppSettings)</param>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.ConfigurationLoader.LoadXmlConfiguration">
      <summary>
            Reads configuration from appSettings then load specific configuration files to internal dictionaries.
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.ConfigurationLoader.MappingDictionnary">
      <summary>
            Mapping is stored as follows : an external dictionary and an internal dictionary.
            External dictionary : key is a database table name, value is dictionary.
            Internal dictionary : key is a C# object property name, value is a database column name.
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.ConfigurationLoader.StartFieldEncloser">
      <summary>
            Caractère d'échappement en début de nom de colonne dans le texte d'une requête SQL.
            </summary>
    </member>
    <member name="T:OsamesMicroOrm.Configuration.Tweak.Customizer">
      <summary>
            To tweak configuration.
            Only available in debug mode
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.Tweak.Customizer.#cctor">
      <summary>
        <markup>
          <include item="SMCAutoDocStaticConstructor">
            <parameter>OsamesMicroOrm.Configuration.Tweak.Customizer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.Tweak.Customizer._appSettingsOriginalValue">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:OsamesMicroOrm.Configuration.Tweak.Customizer._appSettingsOriginalValue</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.Tweak.Customizer.ConfigurationManagerRestoreAllKeys">
      <summary>
            Restore toute les clés changées dans ConfigurationManager.AppSettings
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.Tweak.Customizer.ConfigurationManagerRestoreKey(System.String,System.Diagnostics.TraceSource)">
      <summary>
            Restore une clé précise dans ConfigurationManager.AppSettings
            </summary>
      <param name="key_">Nom de la clé à restorer</param>
      <param name="customLogger_">if not null, TraceSource logger to use instead of default ORM TraceSource logger</param>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.Tweak.Customizer.ConfigurationManagerSetKeyValue(System.String,System.String,System.Diagnostics.TraceSource)">
      <summary>
            Permet de modifier une clé dans ConfigurationManager.AppSettings.
            <para>Si la clé modifiée ne fait pas partie de l'énum de la classe Customizer alors aucun n'appel de ConfigurationLoader.Clear() n'est fait</para></summary>
      <param name="key_">Key for ConfigurationManager.AppSettings</param>
      <param name="keyValue_">Value for ConfigurationManager.AppSettings</param>
      <param name="customLogger_">if not null, TraceSource logger to use instead of default ORM TraceSource logger</param>
    </member>
    <member name="M:OsamesMicroOrm.Configuration.Tweak.Customizer.Log(System.Diagnostics.TraceSource,System.String,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:OsamesMicroOrm.Configuration.Tweak.Customizer.Log(System.Diagnostics.TraceSource,System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </summary>
      <param name="customLogger_">if not null, TraceSource logger to use instead of default ORM TraceSource logger</param>
      <param name="message_">Message</param>
      <param name="error_">True for error, false for info</param>
    </member>
    <member name="T:OsamesMicroOrm.Configuration.Tweak.Customizer.AppSettingsKeys">
      <summary>
            Clés qu'on va souvent modifier dans AppSettings (fichier OsamesOrm.config) via la méthode ConfigurationManagerSetKeyValue de la classe courante.
            Pour les tests unitaires par exemple.
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.Tweak.Customizer.AppSettingsKeys.activeDbConnection">
      <summary>
            Connexion DB active
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.Tweak.Customizer.AppSettingsKeys.sqlTemplatesFileName">
      <summary>
            Fichier XML des templates
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.Tweak.Customizer.AppSettingsKeys.mappingFileName">
      <summary>
            Fichier XML du mapping
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.Tweak.Customizer.AppSettingsKeys.dbName">
      <summary>
            Nom de la db a utiliser
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.Tweak.Customizer.AppSettingsKeys.dbPassword">
      <summary>
            Mot de passe de la db
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.Tweak.Customizer.AppSettingsKeys.dbPath">
      <summary>
            Chemin vers la db
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.Tweak.Customizer.AppSettingsKeys.configurationFolder">
      <summary>
            Dossier contenant la configuration de l'orm
            </summary>
    </member>
    <member name="F:OsamesMicroOrm.Configuration.Tweak.Customizer.AppSettingsKeys.xmlSchemasFolder">
      <summary>
            Dossier contenant les schemas xml de l'orm
            </summary>
    </member>
    <member name="T:OsamesMicroOrm.DbTools.DbToolsCommon">
      <summary>
            Classe dédiée à la transformation des templates vers des chaînes SQL prêtes à l'exécution, en déterminant en parallèle le tableau des paramètres ADO.NET.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsCommon.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>OsamesMicroOrm.DbTools.DbToolsCommon</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsCommon.DetermineAdoParameterName(System.String,System.String,System.Int32@)">
      <summary>
            Détermine le nom du paramètre ADO.NET selon quelques règles.
            <list type="bullet"><item><description>si chaîne : retourner le nom issu du mapping</description></item><item><description>si null : retourner un nom de paramètre "@pN"</description></item><item><description>si commence par "@" : retourne la chaîne en lowercase avec espaces remplacés.</description></item></list></summary>
      <param name="value_">Chaîne à traiter selon les règles énoncées ci-dessus</param>
      <param name="mappingDictionariesContainerKey_">Clé dans le dictionnaire de mapping</param>
      <param name="index_">Index incrémenté servant à savoir où on se trouve dans la liste des paramètres et valeurs.
            Sert aussi pour le nom du paramètre dynamique si on avait passé null.</param>
      <returns>Nom de colonne DB</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsCommon.DetermineDatabaseColumnName(System.String,System.String,System.String@)">
      <summary>
            En connaissant le nom du mapping associé à un objet et le nom de sa propriété, génération en sortie de l'information suivante :
            <para>nom de la colonne en DB (utilisation de mappingDictionariesContainerKey_ pour interroger le mapping)</para></summary>
      <param name="mappingDictionariesContainerKey_">Nom du dictionnaire de mapping à utiliser</param>
      <param name="dataObjectcolumnName_">Nom d'une propriété de l'objet dataObject_</param>
      <param name="dbColumnName_">Sortie : nom de la colonne en DB</param>
      <returns>Ne renvoie rien</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsCommon.DetermineDatabaseColumnNameAndAdoParameter``1(``0@,System.String,System.String,System.String@,System.Collections.Generic.KeyValuePair{System.String,System.Object}@)">
      <summary>
            En connaissant un objet et le nom de sa propriété, génération en sortie des informations suivantes :
            <list type="bullet"><item><description>nom de la colonne en DB (utilisation de mappingDictionariesContainerKey_ pour interroger le mapping)</description></item><item><description>nom et valeur du paramètre ADO.NET correspondant à la propriété (nom : proche du nom de la propriété, valeur : valeur de la propriété).</description></item></list></summary>
      <param name="dataObject_">Instance d'un objet de la classe T</param>
      <param name="mappingDictionariesContainerKey_">Nom du dictionnaire de mapping à utiliser</param>
      <param name="dataObjectcolumnName_">Nom d'une propriété de l'objet dataObject_</param>
      <param name="dbColumnName_">Sortie : nom de la colonne en DB</param>
      <param name="adoParameterNameAndValue_">Sortie : clé/valeur du paramètre ADO.NET</param>
      <typeparam name="T">Type C#</typeparam>
      <returns>Ne renvoie rien</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsCommon.DetermineDatabaseColumnNames(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String}@)">
      <summary>
            En connaissant le nom du mapping associé à un objet et le nom de ses propriétés, génération en sortie de l'information suivante :
            <para>noms des colonnes en DB (utilisation de mappingDictionariesContainerKey_ pour interroger le mapping)</para></summary>
      <param name="mappingDictionariesContainerKey_">Nom du dictionnaire de mapping à utiliser</param>
      <param name="lstDataObjectcolumnName_">Noms des propriétés d'un objet</param>
      <param name="lstDbColumnName_">Sortie : noms des colonnes en DB</param>
      <returns>Ne renvoie rien</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsCommon.DetermineDatabaseColumnNamesAndAdoParameters``1(``0@,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}}@)">
      <summary>
            En connaissant un objet et le nom de ses propriétés, génération en sortie des informations suivantes :
            <list type="bullet"><item><description>noms des colonnes en DB (utilisation de mappingDictionariesContainerKey_ pour interroger le mapping)</description></item><item><description>nom et valeur des paramètres ADO.NET correspondant aux propriétés (nom : proche du nom de la propriété, valeur : valeur de la propriété). </description></item></list></summary>
      <param name="dataObject_">Instance d'un objet de la classe T</param>
      <param name="mappingDictionariesContainerKey_">Nom du dictionnaire de mapping à utiliser</param>
      <param name="lstDataObjectcolumnName_">Noms des propriétés de l'objet dataObject_</param>
      <param name="lstDbColumnName_">Sortie : noms des colonnes en DB</param>
      <param name="adoParameterNameAndValue_">Sortie : clé/valeur des paramètres ADO.NET</param>
      <typeparam name="T">Type C#</typeparam>
      <returns>Ne renvoie rien</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsCommon.DetermineDatabaseColumnsAndPropertiesNames(System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
      <summary>
            En connaissant le nom du mapping associé à un objet, génération en sortie de l'information suivante :
            <para>noms des colonnes en DB (utilisation de mappingDictionariesContainerKey_ pour interroger le mapping, lister toutes les colonnes)</para></summary>
      <param name="mappingDictionariesContainerKey_">Nom du dictionnaire de mapping à utiliser</param>
      <param name="lstDbColumnName_">Sortie : noms des colonnes en DB</param>
      <param name="lstDataObjectPropertiesNames_">Sortie : noms des propriétés de l'objet associé au mapping</param>
      <returns>Ne renvoie rien</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsCommon.FormatSqlNameEqualValueString(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Text.StringBuilder@,System.String)">
      <summary>
            Utilitaire de formatage d'une chaîne texte <c>"my_column = @myParam, my_column2 = @myValue2"</c> en l'ajoutant à un <see cref="T:System.Text.StringBuilder" />.
            <para>Le suffixe est ajouté entre chaque élément de la liste lstDbColumnName_.</para></summary>
      <param name="lstDbColumnName_">Liste de noms de colonne en Db</param>
      <param name="adoParameters_">Objets représentatifs des paramètres ADO.NET</param>
      <param name="sqlCommand_">StringBuilder à compléter</param>
      <param name="optionalSuffix_">Suffixe optionnel, par exemple ",", ajouté entre chaque élément (pas à la fin)</param>
      <returns>Ne renvoie rien.</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsCommon.FormatSqlNameEqualValueString(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object},System.Text.StringBuilder@,System.String)">
      <summary>
            Utilitaire de formatage d'une chaîne texte <c>"my_column = @myParam"</c> en l'ajoutant à un <see cref="T:System.Text.StringBuilder" />.
            </summary>
      <param name="dbColumnName_">Nom de la colonne en Db</param>
      <param name="adoParameters_">Objets représentatifs des paramètres ADO.NET</param>
      <param name="sqlCommand_">StringBuilder à compléter</param>
      <param name="optionalSuffix_">Suffixe optionnel, par exemple ","</param>
      <returns>Ne renvoie rien</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsCommon.ListToCommaSeparatedEnclosedValues(System.Collections.Generic.List{System.String})">
      <summary>
            Création d'une chaîne de texte en prenant chaque élément de la liste paramètre et mettant une virgule entre chaque élément.
            <para>Chaque élément est considéré comme étant un nom de colonne DB, il est protégé par des caractères spéciaux.</para></summary>
      <param name="lstDbColumnName_">Liste de noms de colonnes DB, ex : "FirstName", "LastName"...</param>
      <returns>Chaîne de texte. Ex: "[FirstName], [LastName]..."</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsCommon.TryFormat(System.String,System.String@,System.Object[])">
      <summary>
        <c>String.Format</c> avec gestion d'exception.
            <para>Renvoie faux si le nombre de placeholders et de paramètres ne sont pas égaux.</para></summary>
      <param name="format_">Chaîne texte avec des placeholders</param>
      <param name="result_">Chaine avec les placeholders remplacés si succès, message d'erreur pour l'utilisateur si échec du remplacement (cas d'erreur)</param>
      <param name="args_">Valeurs à mettre dans les placeholders</param>
      <returns>Renvoie vrai si réussi, sinon retourne faux.</returns>
    </member>
    <member name="T:OsamesMicroOrm.DbTools.DbToolsDeletes">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:OsamesMicroOrm.DbTools.DbToolsDeletes</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsDeletes.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>OsamesMicroOrm.DbTools.DbToolsDeletes</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:OsamesMicroOrm.DbTools.DbToolsInserts">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:OsamesMicroOrm.DbTools.DbToolsInserts</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsInserts.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>OsamesMicroOrm.DbTools.DbToolsInserts</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:OsamesMicroOrm.DbTools.DbToolsSelects">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:OsamesMicroOrm.DbTools.DbToolsSelects</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsSelects.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>OsamesMicroOrm.DbTools.DbToolsSelects</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsSelects.FillDataObjectFromDataReader``1(``0,System.Data.IDataReader,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
      <summary>
            Lit les champs indiqués en paramètre dans le tableau de données du DataReader et positionne les valeurs sur les propriétés de dataObject_ paramètre.
            </summary>
      <param name="dataObject_">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dataObject_</parameter>
            <parameter>M:OsamesMicroOrm.DbTools.DbToolsSelects.FillDataObjectFromDataReader``1(``0,System.Data.IDataReader,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
      </param>
      <param name="reader_">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader_</parameter>
            <parameter>M:OsamesMicroOrm.DbTools.DbToolsSelects.FillDataObjectFromDataReader``1(``0,System.Data.IDataReader,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
      </param>
      <param name="lstDbColumnNames_">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lstDbColumnNames_</parameter>
            <parameter>M:OsamesMicroOrm.DbTools.DbToolsSelects.FillDataObjectFromDataReader``1(``0,System.Data.IDataReader,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
      </param>
      <param name="lstPropertiesNames_">Noms des propriétés de l'objet T à utiliser pour les champs à sélectionner</param>
      <typeparam name="T">Type C#</typeparam>
      <returns>Ne retourne rien</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsSelects.FormatSqlForSelect(System.String,System.Collections.Generic.List{System.String},System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.String@,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}}@,System.Collections.Generic.List{System.String}@)">
      <summary>
            Crée le texte de la commande SQL paramétrée ainsi que les paramètres ADO.NET, dans le cas d'un select basé sur un template <c>"SELECT {0} FROM {1}..."</c>.
            Utilise :
            <list type="bullet"><item><description>clé du dictionnaire de mapping</description></item><item><description>liste de noms de propriétés de dataObject_ à utiliser pour les champs à mettre à jour</description></item><item><description>liste de noms de propriétés de dataObject_ ou paramètres dynamiques pour les paramètres dans la partie WHERE.</description></item></list></summary>
      <param name="mappingDictionariesContainerKey_">Clé pour le dictionnaire de mapping. Toujours {1} dans le template sql</param>
      <param name="sqlTemplate_">Template SQL</param>
      <param name="lstDataObjectColumnName_">Noms des propriétés de l'objet dataObject_ à utiliser pour les champs à sélectionner. Permet de formater {0} dans le template SQL</param>
      <param name="strWhereColumnNames_">Pour les colonnes de la clause where : indication d'une propriété de dataObject_ ou un paramètre dynamique. 
            Pour formater à partir de {2} dans le template SQL. Peut être null</param>
      <param name="oWhereValues_">Valeurs pour les paramètres ADO.NET. Peut être null</param>
      <param name="sqlCommand_">Sortie : texte de la commande SQL paramétrée</param>
      <param name="adoParameters_">Sortie : clé/valeur des paramètres ADO.NET pour la commande SQL paramétrée</param>
      <param name="lstDbColumnNames_">Sortie : liste des noms des colonnes DB. Sera utilisé pour le data reader</param>
      <returns>Ne renvoie rien</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsSelects.FormatSqlForSelect(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.String},System.String@,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}}@)">
      <summary>
            Crée le texte de la commande SQL paramétrée ainsi que les paramètres ADO.NET, dans le cas d'un select basé sur un template "SELECT * FROM {0}...".
            <para>Utilise :
            <list type="bullet"><item><description>clé du dictionnaire de mapping</description></item><item><description>liste de noms de propriétés de dataObject_ à utiliser pour les champs à mettre à jour</description></item><item><description>liste de noms de propriétés de dataObject_ ou paramètres dynamiques pour les paramètres dans la partie WHERE.</description></item></list></para></summary>
      <param name="mappingDictionariesContainerKey_">Clé pour le dictionnaire de mapping. Toujours {0} dans le template sql</param>
      <param name="sqlTemplate_">Template SQL</param>
      <param name="strWhereColumnNames_">Pour les colonnes de la clause where : indication d'une propriété de dataObject_ ou un paramètre dynamique. 
            Pour formater à partir de {1} dans le template SQL. Peut être null</param>
      <param name="oWhereValues_">Valeurs pour les paramètres ADO.NET. Peut être null</param>
      <param name="sqlCommand_">Sortie : texte de la commande SQL paramétrée</param>
      <param name="adoParameters_">Sortie : clé/valeur des paramètres ADO.NET pour la commande SQL paramétrée</param>
      <param name="lstDbColumnNames_">Sortie : liste des noms des colonnes DB. Sera utilisé pour le data reader</param>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsSelects.Select``1(System.Collections.Generic.List{System.String},System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
      <summary>
            Retourne une liste d'objets du type T avec les données rendues par une requete SELECT.
            <para>Le template sera du type <c>"SELECT {0} FROM {1} WHERE ..."</c></para></summary>
      <param name="lstPropertiesNames_">Noms des propriétés de l'objet T à utiliser pour les champs à sélectionner</param>
      <param name="refSqlTemplate_">Clé pour le template à utiliser. Le template sera du type <c>"SELECT {0} FROM {1} WHERE ..."</c></param>
      <param name="mappingDictionariesContainerKey_">Clé pour le dictionnaire de mapping</param>
      <param name="strWherecolumnNames_">Noms des colonnes ou indications de paramètres dynamiques pour la partie du template après "WHERE". Peut être null</param>
      <param name="oWhereValues_">Valeurs pour les paramètres ADO.NET pour la partie du template après "WHERE". Peut être null </param>
      <typeparam name="T">Type C#</typeparam>
      <returns>Retourne une liste composée d'objets de type T</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsSelects.SelectAllColumns``1(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
      <summary>
            Retourne une liste d'objets du type T avec les données rendues par une requete SELECT.
            <para>Le template sera du type <c>"SELECT * FROM {0} WHERE ..."</c></para></summary>
      <param name="refSqlTemplate_">Clé pour le template à utiliser. Le template sera du type <c>"SELECT * FROM {0} WHERE ..."</c></param>
      <param name="mappingDictionariesContainerKey_">Clé pour le dictionnaire de mapping</param>
      <param name="strWherecolumnNames_">Noms des colonnes ou indications de paramètres dynamiques pour la partie du template après "WHERE". Peut être null</param>
      <param name="oWhereValues_">Valeurs pour les paramètres ADO.NET pour la partie du template après "WHERE". Peut être null </param>
      <typeparam name="T">Type C#</typeparam>
      <returns>Retourne une liste composée d'objets de type T</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsSelects.SelectSingle``1(System.Collections.Generic.List{System.String},System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
      <summary>
            Retourne un objet du type T avec les données rendues par une requete SELECT dont on ne s'intéresse qu'au premier résultat retourné.
            <para>Le template sera du type <c>"SELECT {0} FROM {1} WHERE ..."</c></para></summary>
      <param name="lstPropertiesNames_">Noms des propriétés de l'objet T à utiliser pour les champs à sélectionner</param>
      <param name="refSqlTemplate_">Clé pour le template à utiliser. Le template sera du type <c>"SELECT {0} FROM {1} WHERE ..."</c></param>
      <param name="mappingDictionariesContainerKey_">Clé pour le dictionnaire de mapping</param>
      <param name="strWhereColumnNames_">Noms des colonnes ou indications de paramètres dynamiques pour la partie du template après "WHERE" </param>
      <param name="oWhereValues_">Valeurs pour les paramètres ADO.NET pour la partie du template après "WHERE" </param>
      <typeparam name="T">Type C#</typeparam>
      <returns>Retourne un objet de type T rempli par les donnnées du DataReader.</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsSelects.SelectSingleAllColumns``1(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Object})">
      <summary>
            Retourne un objet du type T avec les données rendues par une requete SELECT dont on ne s'intéresse qu'au premier résultat retourné.
            <para>Le template sera du type <c>"SELECT * FROM {0} WHERE ..."</c></para></summary>
      <param name="refSqlTemplate_">Clé pour le template à utiliser. Le template sera du type <c>"SELECT * FROM {0} WHERE ..."</c></param>
      <param name="mappingDictionariesContainerKey_">Clé pour le dictionnaire de mapping</param>
      <param name="strWhereColumnNames_">Noms des colonnes ou indications de paramètres dynamiques pour la partie du template après "WHERE" </param>
      <param name="oWhereValues_">Valeurs pour les paramètres ADO.NET pour la partie du template après "WHERE" </param>
      <typeparam name="T">Type C#</typeparam>
      <returns>Retourne un objet de type T</returns>
    </member>
    <member name="T:OsamesMicroOrm.DbTools.DbToolsUpdates">
      <summary>
            Classe servant à formater et exécuter des requêtes SQL de type UPDATE, en proposant une abstraction au dessus de ADO.NET.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsUpdates.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>OsamesMicroOrm.DbTools.DbToolsUpdates</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsUpdates.FormatSqlForUpdate``1(``0@,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String@,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Object}}@)">
      <summary>
            Crée le texte de la commande SQL paramétrée ainsi que les paramètres ADO.NET, dans le cas d'un update sur un seul objet.
            Utilise le template "BaseUpdate" : <c>"UPDATE {0} SET {1} WHERE {2}"</c> ainsi que les éléments suivants :
            <list type="bullet"><item><description>clé du dictionnaire de mapping</description></item><item><description>un objet de données dataObject_</description></item><item><description>liste de noms de propriétés de dataObject_ à utiliser pour les champs à mettre à jour</description></item><item><description>nom de la propriété de dataObject_ correspondant au champ clé primaire</description></item></list></summary>
      <param name="dataObject_">Instance d'un objet de la classe T</param>
      <param name="mappingDictionariesContainerKey_">Clé pour le dictionnaire de mapping</param>
      <param name="sqlTemplate_">Contient le nom du template sql update à utiliser</param>
      <param name="lstDataObjectcolumnName_">Noms des propriétés de l'objet dataObject_ à utiliser pour les champs à mettre à jour</param>
      <param name="primaryKeycolumnName_">Nom de la propriété de dataObject_ correspondant au champ clé primaire</param>
      <param name="sqlCommand_">Sortie : texte de la commande SQL paramétrée</param>
      <param name="adoParameters_">Sortie : clé/valeur des paramètres ADO.NET pour la commande SQL paramétrée</param>
      <typeparam name="T">Type C#</typeparam>
      <returns>Ne renvoie rien</returns>
    </member>
    <member name="M:OsamesMicroOrm.DbTools.DbToolsUpdates.Update``1(``0,System.String,System.String,System.Collections.Generic.List{System.String},System.String)">
      <summary>
            Exécution d'une mise à jour d'un objet de données vers la base de données
            <list type="bullet"><item><description>formatage des éléments nécessaires par appel à <c>FormatSqlForUpdate &lt;T&gt;()</c></description></item><item><description>appel de bas niveau ADO.NET</description></item><item><description>sortie : nombre de lignes mises à jour</description></item></list></summary>
      <param name="dataObject_">Instance d'un objet de la classe T</param>
      <param name="mappingDictionariesContainerKey_">Clé pour le dictionnaire de mapping</param>
      <param name="sqlTemplate_">Contient le nom du template sql update à utiliser</param>
      <param name="propertiesNames_">Noms des propriétés de l'objet dataObject_ à utiliser pour les champs à mettre à jour</param>
      <param name="primaryKeycolumnName_">Nom de la propriété de dataObject_ correspondant au champ clé primaire</param>
      <typeparam name="T">Type C#</typeparam>
      <returns>Retourne le nombre d'enregistrements modifiés dans la base de données.</returns>
    </member>
    <member name="T:OsamesMicroOrm.Utilities.Common">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:OsamesMicroOrm.Utilities.Common</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:OsamesMicroOrm.Utilities.Common.CheckFile(System.String,System.String)">
      <summary>
            Checks that a file exists, else throws an ApplicativeException.
            </summary>
      <param name="fileFullPath_">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileFullPath_</parameter>
            <parameter>M:OsamesMicroOrm.Utilities.Common.CheckFile(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="context_">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>context_</parameter>
            <parameter>M:OsamesMicroOrm.Utilities.Common.CheckFile(System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:OsamesMicroOrm.Utilities.Common.CheckPlaceholdersAndParametersNumbers(System.String,System.Collections.Generic.List{System.String})">
      <summary>
            Checks that placeholders in parameter string and number of values in parameter list match.
            </summary>
      <param name="stringWithPlaceholders_">String with substrings like "{digits}"</param>
      <param name="listValuesForPlaceholders_">List of string values</param>
      <returns>True/false</returns>
    </member>
    <member name="M:OsamesMicroOrm.Utilities.Common.CountPlaceholders(System.String)">
      <summary>
            Count placeholders in parameter string.
            </summary>
      <param name="stringWithPlaceholders_">String with substrings like "{digits}"</param>
      <returns>Number of placeholders</returns>
    </member>
    <member name="T:OsamesMicroOrm.Utilities.MappingTools">
      <summary>
            Utility methods related to database/object mapping.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.Utilities.MappingTools.GetDbEntityDictionnaryMappingKey``1(``0)">
      <summary>
            Reads value of DatabaseMapping class custom attribute.
            </summary>
      <param name="dataObject_">data object</param>
      <typeparam name="T">type indication</typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:OsamesMicroOrm.Utilities.MappingTools.GetDbEntityDictionnaryMappingKey``1(``0)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:OsamesMicroOrm.Utilities.XmlTools">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:OsamesMicroOrm.Utilities.XmlTools</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:OsamesMicroOrm.Utilities.XmlTools.GetRootTagInfos(System.String,System.String@,System.String@)">
      <summary>
            Reads XML root tag and get information.
            </summary>
      <param name="xmlFile_">XML file full path</param>
      <param name="rootTagPrefix_">Prefix associated to namespace, for example "orm"</param>
      <param name="rootTagNamespace_">Namespace, for example "http://www.osames.org/osamesorm"</param>
      <returns>XPathNavigator for later use</returns>
    </member>
    <member name="T:OsamesMicroOrm.Utilities.XmlValidator">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:OsamesMicroOrm.Utilities.XmlValidator</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:OsamesMicroOrm.Utilities.XmlValidator.#ctor(System.String[],System.String[])">
      <summary>
            Constructor.
            </summary>
      <param name="xmlNamespaces_">XML schemas base namespaces</param>
      <param name="xmlSchemas_">XML schemas .xsd files full paths</param>
    </member>
    <member name="F:OsamesMicroOrm.Utilities.XmlValidator._settings">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:OsamesMicroOrm.Utilities.XmlValidator._settings</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:OsamesMicroOrm.Utilities.XmlValidator.Errors">
      <summary>
            Errors.
            </summary>
    </member>
    <member name="M:OsamesMicroOrm.Utilities.XmlValidator.ValidateXml(System.String)">
      <summary>
            XML validation.
            </summary>
      <param name="xmlFile_">Xml file full path</param>
    </member>
    <member name="M:OsamesMicroOrm.Utilities.XmlValidator.ValidateXml(System.String[])">
      <summary>
            XML validation, multiple XML files.
            </summary>
      <param name="xmlFiles_">Xml file full path</param>
    </member>
    <member name="M:OsamesMicroOrm.Utilities.XmlValidator.validationEventHandler(System.Object,System.Xml.Schema.ValidationEventArgs)">
      <summary>
            XML validation event handler : fills Errors and Warnings lists.
            </summary>
      <param name="sender_">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sender_</parameter>
            <parameter>M:OsamesMicroOrm.Utilities.XmlValidator.validationEventHandler(System.Object,System.Xml.Schema.ValidationEventArgs)</parameter>
          </include>
        </markup>
      </param>
      <param name="e_">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>e_</parameter>
            <parameter>M:OsamesMicroOrm.Utilities.XmlValidator.validationEventHandler(System.Object,System.Xml.Schema.ValidationEventArgs)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:OsamesMicroOrm.Utilities.XmlValidator.Warnings">
      <summary>
            Warnings. Some warnings are as critical as errors, such as not finding XML schema.
            </summary>
    </member>
  </members>
</doc>